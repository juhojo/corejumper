$padding: 3;
$scrollbar: 4;
$boxSize: 18;
$left: 2vh;
$gridWidth: #{$boxSize+$padding+$scrollbar}vh;

#levels{

  .grid {
    position: absolute;
    top: 12vh;
    left: $left;
    width: $gridWidth;
    height: 88vh;

    & .scrollbar-container-inner{
      &::before, &::after{
        content: '';
        display: inline-block;
        height: 34.5vh; // grid-height / 2 - box-height / 2 - box-margin-top
      }
    }

    & .grid-item {
      display:inline-block; //to avoid vertical margin collapsing
      box-sizing: content-box; //to increase the box size as padding is animated
      width: #{$boxSize}vh;
      height: #{$boxSize}vh;
      margin: .5vh 1.5vh;
      padding: 0;
      border: $borderWidth solid black;
      font-family: arial;
      font-size: 1.6em;
      cursor: default;

      &::before, &::after{
        content: '';
        position: absolute;
        background: white;
        transition: all .3s;
      }

      &::before{
        width: 0;
        height: calc(100% + 2 * #{$borderWidth});
        top: -#{$borderWidth};
        left: 50%;
        transform: translateX(-50%);
      }

      &::after{
        width: calc(100% + 2 * #{$borderWidth});
        height: 0;
        top: 50%;
        left: -#{$borderWidth};
        transform: translateY(-50%);
      }

      &.selected:not(.locked) {
        animation: pulsing 1.8s infinite;

        &::before{
          width: 60%;
        }

        &::after{
          height: 60%;
        }

        & .grid-item-content{
          transform: translate(-50%, -50%) scale(1);
        }
      }

      &.locked.selected{
        animation: pulsing 1.8s infinite;

        & .grid-item-content{
          transform: translate(-50%, -50%);
        }
      }

      &.locked {
        cursor: not-allowed;
        background: repeating-linear-gradient(
          135deg,
          black,
          black $borderWidth,
          white $borderWidth,
          white 2.5*$borderWidth
        );
        background-origin: border-box;
      }

      & .grid-item-content {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        z-index: 1;
        & span{
          display: inline-block;
        }
      }
    }
  }

  & .level-details{
    position: absolute;
    top: 0;
    left: calc(#{$gridWidth} + 2vh);

    width: calc(100% - #{$gridWidth} - 2vh);
    height: 100vh;

    text-align: center;

    & .container{
      max-height: 100%;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);

      & h2{
        font-size: 2em;
      }
    }
  }
}

@media (max-aspect-ratio: 85/90){
  #levels{
    $boxSize: 10;
    $left: 0;
    $gridWidth: #{$boxSize+$padding+$scrollbar}vh;

    & .grid {
      left: $left;
      width: $gridWidth;

      & .grid-item {
        width: #{$boxSize}vh;
        height: #{$boxSize}vh;
      }
    }

    & .level-details{
      left: $gridWidth;
      width: calc(100vw - #{$gridWidth});

      & .large-button{
        font-size: 1em;
      }
    }
  }
}

@keyframes pulsing{
  0%{
    margin: .5vh 1.5vh;
    padding: 0;
  }
  50%{
    margin: -.5vh 0.5vh;
    padding: 1vh;
  }
  100%{
    margin: .5vh 1.5vh;
    padding: 0;
  }
}
